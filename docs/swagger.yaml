definitions:
  generated.CreateTodoParams:
    properties:
      category:
        type: string
      deadline:
        type: string
      iscompleted:
        type: boolean
      text:
        type: string
      title:
        type: string
    type: object
  generated.Todo:
    properties:
      category:
        type: string
      deadline:
        type: string
      id:
        type: integer
      iscompleted:
        type: boolean
      text:
        type: string
      title:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/todo:
    post:
      consumes:
      - application/json
      description: Create a new todo entry in the database
      parameters:
      - description: Todo object
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/generated.CreateTodoParams'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/generated.CreateTodoParams'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new todo
      tags:
      - todos
  /api/todo/{id}:
    delete:
      description: Delete a todo based on the id from the database
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/generated.Todo'
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: Not found
          schema:
            type: string
      summary: Delete todo
      tags:
      - todos
    get:
      description: Fetches a todo based on the id from the database
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/generated.Todo'
      summary: Get todo
      tags:
      - todos
  /api/todos:
    get:
      description: Fetches a list of all todos from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/generated.Todo'
            type: array
      summary: Get all todos
      tags:
      - todos
swagger: "2.0"
